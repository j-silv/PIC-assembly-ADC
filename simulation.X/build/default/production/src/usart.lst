MPASM 5.86                         USART.ASM   12-3-2020  21:33:50         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; ----------------------------------------------------
                      00002 ;        USART (mode asynchronous full-duplex)
                      00003 ; ----------------------------------------------------
                      00004 
                      00005     list p=16f877a
                      00006     include "p16f877a.inc"
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Oct 24 2019
                      00005 ;  MPASM PIC16F877A processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00567         LIST
                      00007 
                      00008 ; ==============================================================================
                      00009 ;                          variables/constantes
                      00010 ; ==============================================================================
                      00011       ; registers
  0000                00012       EXTERN    CURRENT_MODE, MODE_REQUEST, TMR1_V_COUNT
                      00013       ; subprograms
  0000                00014       EXTERN    START_ADC
                      00015 
  0019                00016       constant  X_VAL_SPBRG = D'25'     ; prescaler valeur pour le baud-rate generateur
                      00017 
                      00018 USART_MSGS      IDATA
0000   54 45 53 54 0D 00019 PTR_PROMPT_MSG  DB  "TEST\r\n\0"    ; pointe a msg prompt pour l'utilisateur "Test\r\n"
       0A 00 
0007   58 2C 58 20 56 00020 PTR_RESULT_MSG  DB  "X,X V\r\n\0"   ; pointe a ADC result qu'on va envoyer via mode auto/manual
       0D 0A 00 
                      00021 
                      00022       ; export labels to other modules
  0000                00023       GLOBAL     PTR_PROMPT_MSG, PTR_RESULT_MSG
                      00024 
                      00025 ; ==============================================================================
                      00026 ;                          peripheral configuration
                      00027 ; ==============================================================================
                      00028 
                      00029 USART_FILE    CODE
0000                  00030 USART_Config
  0000                00031     GLOBAL      USART_Config    ; export sub-program label to other modules
                      00032     ; entrees/sorties (RC6/TX/CK and RC7/RX/DT)
                      00033     ; TXUSART EST OUTPUT (RC6 -> sortie)
                      00034     ; RXUSART EST INPUT (RC7 -> entree)
0000   1683 1303      00035     banksel     TRISC
0002   3080           00036     movlw       ( 0<<TRISC6 | 1<<TRISC7 )
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0003   0087           00037     movwf       TRISC
                      00038 
                      00039     ; USART baud-rate
                      00040     ; Utilisation de HIGH SPEED mode (BRGH = 1) pour reduire l'erreur sur le baud rate
MPASM 5.86                         USART.ASM   12-3-2020  21:33:50         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00041     ; formule du baud rate = (Asynchronous) Baud Rate = FOSC/(16(X+1)) ou X  est la
                      00042     ; valeur du registre SPBRG et est de 0...255
                      00043     ; nous voulons 9600 baud avec un FOSC de 4 MHz, ca donne X = 25
0004   1683 1303      00044     banksel     SPBRG
0006   3019           00045     movlw       X_VAL_SPBRG
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0007   0099           00046     movwf       SPBRG
                      00047 
                      00048     ; mode asynchrone
                      00049     ; high speed pour reduire l'erreur
                      00050     ; 8-bit transmission mode
                      00051     ; enable transmission (for polling prompt msg transmission)
0008   1683 1303      00052     banksel     TXSTA
000A   3024           00053     movlw       ( 1<<TXEN | 0<<TX9 | 1<<BRGH | 0<<SYNC )
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000B   0098           00054     movwf       TXSTA
                      00055 
                      00056     ; peripherique serie est "enabled"
                      00057     ; enables continuous receive
000C   1283 1303      00058     banksel     RCSTA
000E   3090           00059     movlw       ( 1<<SPEN | 1<<CREN )
000F   0098           00060     movwf       RCSTA
                      00061 
0010   0008           00062     return
                      00063 
                      00064 ; ==============================================================================
                      00065 ;               Print prompt message to PC terminal (polling)
                      00066 ;==============================================================================
                      00067 
                      00068 ; ----------------------------------------------
                      00069 ;      Print prompt via USART to PC terminal
                      00070 ; ----------------------------------------------
                      00071 
0011                  00072 PRINT_PROMPT_MSG
  0000                00073     GLOBAL PRINT_PROMPT_MSG
                      00074     ; necessaire a faire un banksel/bankisel pour les deux, car ces 2 registres sont accede
                      00075     ; par 2 manieres different - addressage directe et addressage indirecte
0011   1283 1303      00076     banksel     PIR1              ; selectionne le bank pour PIR1 this (RP1, RP0)
0013   ????           00077     bankisel    PTR_PROMPT_MSG    ; selectionne le bank pour PTR_PROMPT_MSG (IRP)
                      00078 
0014   30??           00079     movlw       PTR_PROMPT_MSG
0015   0084           00080     movwf       FSR               ; point to the start of the prompt msg
                      00081 
0016                  00082 TEST_END_OF_PROMPT_MSG
0016   0800           00083     movf        INDF, W           ; move current byte pointed by FSR to work reg
0017   3A00           00084     xorlw       A'\0'             ; this operation will make Z flag = 1 if
                      00085                                   ; null character ('\0') of the msg is reached
0018   1903           00086     btfsc       STATUS, Z         ; if the end of the msg is reached, end USART comm
0019   2???           00087     goto        PROMPT_MSG_SENT
                      00088 
001A                  00089 TEST_TXIF
001A   1E0C           00090     btfss       PIR1, TXIF        ; test if the TX_REG is empty
001B   2???           00091     goto        TEST_TXIF         ; sinon, attendre
MPASM 5.86                         USART.ASM   12-3-2020  21:33:50         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00092 
001C   0800           00093     movf        INDF, W           ; place msg byte pointed to by FSR into work reg
001D   0099           00094     movwf       TXREG             ; send msg byte to USART TX register
Message[305]: Using default destination of 1 (file).
001E   0A84           00095     incf        FSR               ; increment pointer index to next byte in prompt msg
001F   2???           00096     goto        TEST_END_OF_PROMPT_MSG
                      00097 
                      00098 ; it is not necessary to preload the FSR and preset the IRP, a nop instruction could
                      00099 ; be placed here instead, or a rearranged labeling
0020                  00100 PROMPT_MSG_SENT
0020   ????           00101                 bankisel PTR_RESULT_MSG   ; preselect the correct bank for indirect addressing
                      00102                                           ; the start of this msg
0021   30??           00103                 movlw PTR_RESULT_MSG      ; preload the FSR with the address to the
0022   0084           00104                 movwf FSR                 ; ADC result (this will be the next msg to send)
                      00105 
0023   0008           00106                 return
                      00107 
                      00108 ; ==============================================================================
                      00109 ;                           Interrupt callbacks
                      00110 ; ==============================================================================
                      00111 
                      00112 ; ----------------------------------
                      00113 ;              RCIF
                      00114 ; ----------------------------------
                      00115 
0024                  00116 RCIF_Callback
  0000                00117     GLOBAL      RCIF_Callback
0024   1283 1303      00118     banksel     RCREG
0026   081A           00119     movf        RCREG, W
0027   00??           00120     movwf       MODE_REQUEST         ; save what was received into a dedicated register
                      00121                                      ; this is to avoid possibly reading 2 different
                      00122                                      ; bytes in FIFO during the XOR tests below
0028                  00123 TEST_IF_A_UPPER
0028   08??           00124     movf        MODE_REQUEST, W      ; move what was received into working reg
0029   3A41           00125     xorlw       A'A'                 ; this operation will make Z flag = 1 if
                      00126                                      ; the character 'A' was received
002A   1903           00127     btfsc       STATUS, Z
002B   2???           00128     goto        SET_AUTOMATIC_MODE
                      00129 
002C                  00130 TEST_IF_A_LOWER
002C   08??           00131     movf        MODE_REQUEST, W      ; move what was received into working reg
002D   3A61           00132     xorlw       A'a'                 ; this operation will make Z flag = 1 if
                      00133                                      ; the character 'a' was received
002E   1903           00134     btfsc       STATUS, Z
002F   2???           00135     goto        SET_AUTOMATIC_MODE
                      00136 
0030                  00137 TEST_IF_R_UPPER
0030   08??           00138     movf        MODE_REQUEST, W      ; move what was received into working reg
0031   3A52           00139     xorlw       A'R'                 ; this operation will make Z flag = 1 if
                      00140                                      ; the character 'R' was received
0032   1903           00141     btfsc       STATUS, Z
0033   2???           00142     goto        SET_MANUAL_MODE
                      00143 
MPASM 5.86                         USART.ASM   12-3-2020  21:33:50         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0034                  00144 TEST_IF_R_LOWER
0034   08??           00145     movf        MODE_REQUEST, W      ; move what was received into working reg
0035   3A72           00146     xorlw       A'r'                 ; this operation will make Z flag = 1 if
                      00147                                      ; the character 'r' was received
0036   1903           00148     btfsc       STATUS, Z
0037   2???           00149     goto        SET_MANUAL_MODE
                      00150 
0038                  00151 TEST_IF_D_UPPER
0038   08??           00152     movf        MODE_REQUEST, W      ; move what was received into working reg
0039   3A44           00153     xorlw       A'D'                 ; this operation will make Z flag = 1 if
                      00154                                      ; the character 'D' was received
003A   1903           00155     btfsc       STATUS, Z
003B   2???           00156     goto        CONVERSION_REQUEST
                      00157 
003C                  00158 TEST_IF_D_LOWER
003C   08??           00159     movf        MODE_REQUEST, W      ; move what was received into working reg
003D   3A64           00160     xorlw       A'd'                 ; this operation will make Z flag = 1 if
                      00161                                      ; the character 'd' was received
003E   1903           00162     btfsc       STATUS, Z
003F   2???           00163     goto        CONVERSION_REQUEST
                      00164 
0040                  00165 SET_AUTOMATIC_MODE
0040   3041           00166     movlw       A'A'
0041   00??           00167     movwf       CURRENT_MODE         ; set the current mode reg to automatic
                      00168 
                      00169     ; enable the TMR1
0042   1283 1303      00170     banksel     T1CON
0044   1410           00171     bsf         T1CON, TMR1ON
                      00172 
                      00173     ; Timer1 interrupt enable
0045   1683 1303      00174     banksel     PIE1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0047   140C           00175     bsf         PIE1, TMR1IE
                      00176 
                      00177     ; reset overflow count register (0 ms have passed)
                      00178     ; necessary in case RCIF raised while TMR1_V_COUNT is at 1
                      00179     ; if that happens, TMR1_V_COUNT would never be reset
0048   ???? ????      00180     banksel     TMR1_V_COUNT
004A   01??           00181     clrf        TMR1_V_COUNT
004B   2???           00182     goto        EXIT_RCIF_CALLBACK
                      00183 
004C                  00184 SET_MANUAL_MODE
004C   3052           00185     movlw       A'R'
004D   00??           00186     movwf       CURRENT_MODE         ; set the current mode reg to manual
                      00187 
                      00188     ; disable the TMR1
004E   1283 1303      00189     banksel     T1CON
0050   1010           00190     bcf         T1CON, TMR1ON
                      00191 
                      00192     ; Timer1 interrupt disable
0051   1683 1303      00193     banksel     PIE1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0053   100C           00194     bcf         PIE1, TMR1IE
MPASM 5.86                         USART.ASM   12-3-2020  21:33:50         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00195 
0054   2???           00196     goto        EXIT_RCIF_CALLBACK
                      00197 
0055                  00198 CONVERSION_REQUEST
0055   08??           00199     movf        CURRENT_MODE, W
0056   3A52           00200     xorlw       A'R'                 ; this operation will make Z flag = 1 if
                      00201                                      ; the current mode is manual! Thus the
                      00202                                      ; user has correctly requested a conersion
0057   1D03           00203     btfss       STATUS, Z            ; performing a btfss instead of btfsc here
                      00204                                      ; because if Z is set, then we DO want to
                      00205                                      ; start the ADC and if it isn't, then we want
                      00206                                      ; to exit this callback
0058   2???           00207     goto        EXIT_RCIF_CALLBACK
0059   ???? ???? 2??? 00208     lcall       START_ADC
005C   ???? ????      00209     PAGESEL     EXIT_RCIF_CALLBACK ; not technically necessary to perform
                      00210                                    ; a PAGESEL psuedoinstruction here since no subsequent
                      00211                                    ; goto instructions are performed in this object module
                      00212 
005E                  00213 EXIT_RCIF_CALLBACK
005E   0008           00214     return
                      00215 
                      00216 ; ----------------------------------
                      00217 ;              TXIF
                      00218 ; ----------------------------------
                      00219 
005F                  00220 TXIF_Callback
  0000                00221     GLOBAL      TXIF_Callback
005F   ????           00222     bankisel    PTR_RESULT_MSG    ; this shouldn't really be necessary since
                      00223                                   ; indirect addressing isn't used unexpectedly
0060                  00224 TEST_END_OF_RESULT_MSG
0060   0800           00225     movf        INDF, W           ; move current byte pointed by FSR to work reg
0061   3A00           00226     xorlw       A'\0'             ; this operation will make Z flag = 1 if
                      00227                                   ; null character ('\0') of the msg is reached
0062   1903           00228     btfsc       STATUS, Z         ; if the end of the msg is reached, end USART comm
0063   2???           00229     goto RESULT_MSG_SENT
                      00230 
0064                  00231 SEND_NEW_BYTE
0064   1283 1303      00232     banksel     TXREG
0066   0800           00233     movf        INDF, W           ; place msg byte pointed to by FSR into work reg
0067   0099           00234     movwf       TXREG             ; send msg byte to USART TX register
Message[305]: Using default destination of 1 (file).
0068   0A84           00235     incf        FSR               ; increment pointer index to next byte in result msg
0069   2???           00236     goto EXIT_TXIF_CALLBACK
                      00237 
006A                  00238 RESULT_MSG_SENT
006A   1683 1303      00239     banksel     TXSTA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
006C   1298           00240     bcf         TXSTA, TXEN ; disable transmission
006D   1683 1303      00241     banksel     PIE1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
006F   120C           00242     bcf         PIE1, TXIE  ; USART TX interrupt flag disable
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0070   168C           00243     bsf         PIE1, RCIE  ; USART RC interrupt flag enable
MPASM 5.86                         USART.ASM   12-3-2020  21:33:50         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00244 
0071                  00245 EXIT_TXIF_CALLBACK
0071   0008           00246     return
                      00247 
                      00248 ; ----------------------------------
                      00249 ;          end module code
                      00250 ; ----------------------------------
                      00251 
                      00252     end
MPASM 5.86                         USART.ASM   12-3-2020  21:33:50         PAGE  7


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CIS                               00000003
CKE                               00000006
MPASM 5.86                         USART.ASM   12-3-2020  21:33:50         PAGE  8


SYMBOL TABLE
  LABEL                             VALUE 

CKP                               00000004
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000009C
CMIE                              00000006
CMIF                              00000006
CONVERSION_REQUEST                00000055
CREN                              00000004
CSRC                              00000007
CURRENT_MODE                      00000000
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            0000009D
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
EXIT_RCIF_CALLBACK                0000005E
EXIT_TXIF_CALLBACK                00000071
F                                 00000001
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
MPASM 5.86                         USART.ASM   12-3-2020  21:33:50         PAGE  9


SYMBOL TABLE
  LABEL                             VALUE 

INTF                              00000001
IRP                               00000007
MODE_REQUEST                      00000000
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PRINT_PROMPT_MSG                  00000011
PROMPT_MSG_SENT                   00000020
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
PTR_PROMPT_MSG                    00000000
PTR_RESULT_MSG                    00000007
R                                 00000002
RA0                               00000000
MPASM 5.86                         USART.ASM   12-3-2020  21:33:50         PAGE 10


SYMBOL TABLE
  LABEL                             VALUE 

RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCIF_Callback                     00000024
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RESULT_MSG_SENT                   0000006A
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
MPASM 5.86                         USART.ASM   12-3-2020  21:33:50         PAGE 11


SYMBOL TABLE
  LABEL                             VALUE 

S                                 00000003
SEN                               00000000
SEND_NEW_BYTE                     00000064
SET_AUTOMATIC_MODE                00000040
SET_MANUAL_MODE                   0000004C
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
START_ADC                         00000000
STATUS                            00000003
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TEST_END_OF_PROMPT_MSG            00000016
TEST_END_OF_RESULT_MSG            00000060
TEST_IF_A_LOWER                   0000002C
TEST_IF_A_UPPER                   00000028
TEST_IF_D_LOWER                   0000003C
TEST_IF_D_UPPER                   00000038
TEST_IF_R_LOWER                   00000034
TEST_IF_R_UPPER                   00000030
TEST_TXIF                         0000001A
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
MPASM 5.86                         USART.ASM   12-3-2020  21:33:50         PAGE 12


SYMBOL TABLE
  LABEL                             VALUE 

TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR1_V_COUNT                      00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
MPASM 5.86                         USART.ASM   12-3-2020  21:33:50         PAGE 13


SYMBOL TABLE
  LABEL                             VALUE 

TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIF_Callback                     0000005F
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
USART_Config                      00000000
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
X_VAL_SPBRG                       00000019
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00001FFF
_CP_OFF                           00003FFF
_CP_ON                            00001FFF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
MPASM 5.86                         USART.ASM   12-3-2020  21:33:50         PAGE 14


SYMBOL TABLE
  LABEL                             VALUE 

_WRT_OFF                          00003FFF
_XT_OSC                           00003FFD
__16F877A                         00000001

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :    10 reported,     0 suppressed

