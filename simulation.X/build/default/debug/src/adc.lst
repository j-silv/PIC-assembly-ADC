MPASM 5.86                           ADC.ASM   12-3-2020  21:36:27         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; ----------------------------------------------
                      00002 ;                       ADC
                      00003 ; ----------------------------------------------
                      00004 
                      00005     list p=16f877a
                      00006     include "p16f877a.inc"
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Oct 24 2019
                      00005 ;  MPASM PIC16F877A processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00567         LIST
                      00007 
                      00008 ; ==============================================================================
                      00009 ;                          variables/constantes
                      00010 ; ==============================================================================
                      00011 
                      00012         ; registers
  0000                00013         EXTERN       PTR_RESULT_MSG
  0000                00014         EXTERN       ADC_RESULT_BINARY, ADC_RESULT_UNITY, ADC_RESULT_DECIMAL
                      00015 
  0033                00016         constant     ADC_BIN_VOLT_UNITY_RATIO = D'51'
  0005                00017         constant     ADC_BIN_VOLT_DECIMAL_RATIO = D'5'
  0030                00018         constant     ASCII_NUMBER_OFFSET = 0x30
                      00019 
  0000                00020         constant     UNITY_OFFSET = 0x00        ; this corresponds to the index that the UNITY value occ
                            upies
                      00021                                             ; in the USART string
  0002                00022         constant     DECIMAL_OFFSET = 0x02      ; this corresponds to the index that the DECIMAL value o
                            ccupies
                      00023                                             ; in the USART string
                      00024 
                      00025 
                      00026 ; ==============================================================================
                      00027 ;                          peripheral configuration
                      00028 ; ==============================================================================
                      00029 ADC_FILE       CODE
0000                  00030 ADC_Config
  0000                00031         GLOBAL       ADC_Config
0000   1683 1303      00032         banksel      ADCON1
                      00033         ; Left justify ,1 analog channel
                      00034         ; VDD and VSS references
0002   300E           00035         movlw        ( 0<<ADFM | 1<<PCFG3 | 1<<PCFG2 | 1<<PCFG1 | 0<<PCFG0 )
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0003   009F           00036         movwf        ADCON1
                      00037 
0004   1283 1303      00038         banksel      ADCON0
                      00039         ; Fosc/8, A/D enabled
0006   3041           00040         movlw        ( 0 << ADCS1 | 1<<ADCS0 | 1<<ADON )
MPASM 5.86                           ADC.ASM   12-3-2020  21:36:27         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007   009F           00041         movwf        ADCON0
0008   0008           00042         return
                      00043 
                      00044 ; ==============================================================================
                      00045 ;                           Interrupt callbacks
                      00046 ; ==============================================================================
                      00047 
                      00048 ; ----------------------------------
                      00049 ;              ADIF
                      00050 ; ----------------------------------
                      00051 
0009                  00052 ADIF_Callback
  0000                00053     GLOBAL      ADIF_Callback
                      00054 
                      00055     ; as long as there is no program memory boundary crossing in this module, no need to
                      00056     ; use a long call which selects the appropiate page bits
0009   2???           00057     call        ADC_BIN_TO_DEC_TO_ASCII
                      00058     ; once this function returns, the UNITY and DECIMAL values should be
                      00059     ; properly calculated and located in their dedicated registers
                      00060     ; we can now place these values into the appropiate indexes in the USART string
                      00061 
                      00062 ; ----------------------------------
                      00063 ;  Place results in USART string
                      00064 ; ----------------------------------
                      00065 
                      00066     ; This section performs the following ->
                      00067     ; result[U_offset] = Unity   (register)
                      00068     ; result[D_offset] = Decimal (register)
000A   ????           00069     bankisel PTR_RESULT_MSG   ; select the correct bank for indirect addressing
                      00070                               ; of the result message string
000B   30??           00071     movlw    (PTR_RESULT_MSG + UNITY_OFFSET)
000C   0084           00072     movwf    FSR              ; point to unity index in USART string
000D   08??           00073     movf     ADC_RESULT_UNITY, W
000E   0080           00074     movwf    INDF             ; place the ADC_UNITY_RESULT into the USART string
                      00075                               ; at the UNITY index
000F   30??           00076     movlw    (PTR_RESULT_MSG + DECIMAL_OFFSET)
0010   0084           00077     movwf    FSR              ; point to decimal index in USART string
0011   08??           00078     movf     ADC_RESULT_DECIMAL, W
0012   0080           00079     movwf    INDF             ; place the ADC_DECIMAL_RESULT into the USART string
                      00080                               ; at the DECIMAL index
                      00081 
                      00082 ; --------------------------------------------
                      00083 ;  Set FSR to point to start of USART string
                      00084 ; --------------------------------------------
                      00085 
                      00086     ; this is performed at the end, so that once the TXIF is raised, the FSR
                      00087     ; and IRP bits (bankisel) are good to go
0013   30??           00088     movlw PTR_RESULT_MSG      ; preload the FSR with the address to the
0014   0084           00089     movwf FSR                 ; ADC result (this will be the next msg to send)
                      00090 
                      00091     ; a movlw then mowf  using bit-wise operations
                      00092     ; cannot be done here, because the state of the TMR1IE is
                      00093     ; not directly known (automatic/manual). this is why bsf/bsf
MPASM 5.86                           ADC.ASM   12-3-2020  21:36:27         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00094     ; operations are performed instead
0015   1683 1303      00095     banksel     PIE1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0017   128C           00096     bcf         PIE1, RCIE   ; Receive USART flag disable
0018   1683 1303      00097     banksel     TXSTA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
001A   1698           00098     bsf         TXSTA, TXEN  ; transmission is now enabled
001B   1683 1303      00099     banksel     PIE1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
001D   160C           00100     bsf         PIE1, TXIE   ; USART TX interrupt flag enable
                      00101 
001E   0008           00102     return
                      00103 
                      00104 ; ==============================================================================
                      00105 ;                               Sub-programs
                      00106 ; ==============================================================================
                      00107 
                      00108 ; -------------------------------------
                      00109 ;      Lire tension ADC (polling)
                      00110 ; -------------------------------------
                      00111 
001F                  00112 Lire_Tension_Polling
  0000                00113            GLOBAL   Lire_Tension_Polling
001F   1283 1303      00114            banksel  ADCON0
0021   151F           00115 start      bsf      ADCON0,GO            ; demarrage de la conversion
0022   191F           00116 non        btfsc    ADCON0,GO_NOT_DONE   ; attendre la fin de conversion
0023   2???           00117            goto     non
0024   081E           00118 oui        movf     ADRESH,W             ; mettre resultat (8 bits de poids fort)
                      00119                                          ; de la conversion au reg de travail
0025   00??           00120            movwf    ADC_RESULT_BINARY    ; sauvegarder resultat (tension) en memoire
0026   0008           00121            return
                      00122 
                      00123 ; -------------------------------------
                      00124 ;   Start ADC conversion (interrupts)
                      00125 ; -------------------------------------
                      00126 
0027                  00127 START_ADC
  0000                00128            GLOBAL      START_ADC
0027   1283 1303      00129            banksel     ADCON0
0029   151F           00130            bsf         ADCON0, GO     ; demarrage de la conversion
002A   1683 1303      00131            banksel     PIE1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
002C   170C           00132            bsf         PIE1, ADIE     ; ADC conversion done interrupt flag enable
002D   0008           00133            return
                      00134 
                      00135 ; ------------------------------------
                      00136 ;           Transcodage ASCII
                      00137 ; ------------------------------------
                      00138 
                      00139 ; ------------------------------------------------------------------------
                      00140 ; Example/explanation: carry bit/NOT_borrow bit
                      00141 ; If we perform the subtract instruction -> 3-5, the ALU in the PIC uC performs
                      00142 ; a 2's complement on the 2nd operand and follows with an addition
MPASM 5.86                           ADC.ASM   12-3-2020  21:36:27         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00143 ; ------------------------------------------------------------------------
                      00144 ;   3  =   0011 =    3  =   0011   ->  3 in 2's complement and unsigned
                      00145 ; - 5  = - 0101 = +(-5) = + 1011   -> -5 in 2's complement, 11 in unsigned
                      00146 ;                       = 0 1110   =  -2 in 2's complement, 14 in unsigned
                      00147 ;               carry bit ^
                      00148 ; ------------------------------------------------------------------------
                      00149 ; What we see here is that if the result is supposed to be negative, the
                      00150 ; carry bit will be RESET. This will always be the case.
                      00151 ;
                      00152 ; However, if the inverse of this operation is done -> 5-3, we see that
                      00153 ; the result is expected to be positive and the 2's complement conversion
                      00154 ; is what leads to the carry bit being SET
                      00155 ; ------------------------------------------------------------------------
                      00156 ;   5  =   0101 =    5  =   0101  ->  5 in 2's complement and unsigned
                      00157 ; - 3  = - 0011 = +(-3) = + 1101  -> -3 in 2's complement, 13 in unsigned
                      00158 ;                       = 1 0010  =  -2 (in 2's complement), 18 in unsigned!
                      00159 ;               carry bit ^
                      00160 ; ------------------------------------------------------------------------
                      00161 
002E                  00162 ADC_BIN_TO_DEC_TO_ASCII
  0000                00163     GLOBAL  ADC_BIN_TO_DEC_TO_ASCII
                      00164 
002E   302F           00165     movlw   (ASCII_NUMBER_OFFSET - 0x01)
002F   00??           00166     movwf   ADC_RESULT_UNITY            ; ADC_RESULT_UNITY currently contains 0x2F
0030   00??           00167     movwf   ADC_RESULT_DECIMAL          ; ADC_RESULT_DECIMAL currently contains 0x2F
                      00168                                         ; previous unity/decimal results are effectively erased
                      00169     ; pull result from A/D Result High Register (ADRESH)
                      00170     ; because the ADC is configured in left justified,
                      00171     ; we should be pulling the 8 MSBs from the 10-bit result
0031   1283 1303      00172     banksel ADRESH
0033   081E           00173     movf    ADRESH,W
0034   00??           00174     movwf   ADC_RESULT_BINARY           ; save to dedicated register for subsequent subwf instructions
                      00175 
                      00176 ; ------------------------------------
                      00177 ;           UNITY calculation
                      00178 ; ------------------------------------
                      00179 
                      00180     ; first pass through this instruction block, ADC_RESULT_UNITY
                      00181     ; will become 0x30 (0 in ASCII)
                      00182     ; by preloading this register with ASCII_NUMBER_OFFSET - 1, the initial value is
                      00183     ; effectively "set" to 0 in ASCII, without the need for extra gotos
0035                  00184 CALCULATE_UNITY_PLACE
0035   0A??           00185     incf    ADC_RESULT_UNITY, F
0036   00??           00186     movwf   ADC_RESULT_BINARY           ; save result of substraction (division "remainder")
0037   3033           00187     movlw   ADC_BIN_VOLT_UNITY_RATIO    ; prepare substraction constant value in working reg
                      00188 
0038   02??           00189     subwf   ADC_RESULT_BINARY, W        ; subtract 51 from binary result (1 volt corresponds to 51 in de
                            c (ratio))
0039   1803           00190     btfsc   STATUS, C                   ; if the carry bit is SET, the result is POSITIVE
003A   2???           00191     goto    CALCULATE_UNITY_PLACE       ; this means that the UNITY value for the ADC result is not yet 
                            found
                      00192 
                      00193 ; ------------------------------------
MPASM 5.86                           ADC.ASM   12-3-2020  21:36:27         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00194 ;        DECIMAL calculation
                      00195 ; ------------------------------------
                      00196 
003B   08??           00197     movf    ADC_RESULT_BINARY, W        ; After UNITY calculation, the division "remainder" is placed
                      00198                                         ; into working reg to calculate the DECIMAL place value of ADC r
                            esult
003C                  00199 CALCULATE_DECIMAL_PLACE
003C   0A??           00200     incf    ADC_RESULT_DECIMAL, F
003D   00??           00201     movwf   ADC_RESULT_BINARY           ; save result of substraction (division "remainder")
003E   3005           00202     movlw   ADC_BIN_VOLT_DECIMAL_RATIO  ; prepare substraction constant value in working reg
                      00203 
003F   02??           00204     subwf   ADC_RESULT_BINARY, F        ; subtract 5 from binary result (0.1 volt corresponds to 5 in de
                            c (ratio))
0040   1803           00205     btfsc   STATUS, C                   ; if the carry bit is SET, the result is POSITIVE
0041   2???           00206     goto    CALCULATE_DECIMAL_PLACE     ; this means that the DECIMAL value for the ADC result is not ye
                            t found
                      00207 
                      00208 
0042   0008           00209     return
                      00210 
                      00211 ; ----------------------------------
                      00212 ;          end module code
                      00213 ; ----------------------------------
                      00214 
                      00215     end
MPASM 5.86                           ADC.ASM   12-3-2020  21:36:27         PAGE  6


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCS2                             00000006
ADC_BIN_TO_DEC_TO_ASCII           0000002E
ADC_BIN_VOLT_DECIMAL_RATIO        00000005
ADC_BIN_VOLT_UNITY_RATIO          00000033
ADC_Config                        00000000
ADC_RESULT_BINARY                 00000000
ADC_RESULT_DECIMAL                00000000
ADC_RESULT_UNITY                  00000000
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIF_Callback                     00000009
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ASCII_NUMBER_OFFSET               00000030
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CALCULATE_DECIMAL_PLACE           0000003C
CALCULATE_UNITY_PLACE             00000035
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
MPASM 5.86                           ADC.ASM   12-3-2020  21:36:27         PAGE  7


SYMBOL TABLE
  LABEL                             VALUE 

CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CIS                               00000003
CKE                               00000006
CKP                               00000004
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000009C
CMIE                              00000006
CMIF                              00000006
CREN                              00000004
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            0000009D
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DECIMAL_OFFSET                    00000002
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
MPASM 5.86                           ADC.ASM   12-3-2020  21:36:27         PAGE  8


SYMBOL TABLE
  LABEL                             VALUE 

I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
Lire_Tension_Polling              0000001F
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
MPASM 5.86                           ADC.ASM   12-3-2020  21:36:27         PAGE  9


SYMBOL TABLE
  LABEL                             VALUE 

PSPIF                             00000007
PSPMODE                           00000004
PTR_RESULT_MSG                    00000000
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
MPASM 5.86                           ADC.ASM   12-3-2020  21:36:27         PAGE 10


SYMBOL TABLE
  LABEL                             VALUE 

RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
START_ADC                         00000027
STATUS                            00000003
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
MPASM 5.86                           ADC.ASM   12-3-2020  21:36:27         PAGE 11


SYMBOL TABLE
  LABEL                             VALUE 

TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
UNITY_OFFSET                      00000000
MPASM 5.86                           ADC.ASM   12-3-2020  21:36:27         PAGE 12


SYMBOL TABLE
  LABEL                             VALUE 

W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00001FFF
_CP_OFF                           00003FFF
_CP_ON                            00001FFF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FFD
__16F877A                         00000001
__DEBUG                           
__MPLAB_DEBUGGER_SIMULATOR        1
non                               00000022
oui                               00000024
start                             00000021

MPASM 5.86                           ADC.ASM   12-3-2020  21:36:27         PAGE 13





Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     5 reported,     0 suppressed

